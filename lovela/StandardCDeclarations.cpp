#include "pch.h"
#include "StandardCDeclarations.h"

void StandardCDeclarations::GetHeader(std::vector<std::wstring>& headers, std::wstring_view function)
{
	// TODO: Add more if needed, these are extracted from https://www.tutorialspoint.com/c_standard_library/index.htm
	static const std::map<std::string, std::string> declarations{
		{"acos", "math.h"},
		{"asin", "math.h"},
		{"atan", "math.h"},
		{"atan2", "math.h"},
		{"cos", "math.h"},
		{"cosh", "math.h"},
		{"sin", "math.h"},
		{"sinh", "math.h"},
		{"tanh", "math.h"},
		{"exp", "math.h"},
		{"frexp", "math.h"},
		{"ldexp", "math.h"},
		{"log", "math.h"},
		{"log10", "math.h"},
		{"modf", "math.h"},
		{"pow", "math.h"},
		{"sqrt", "math.h"},
		{"ceil", "math.h"},
		{"fabs", "math.h"},
		{"floor", "math.h"},
		{"fmod", "math.h"},

		{"fclose", "stdio.h"},
		{"clearerr", "stdio.h"},
		{"feof", "stdio.h"},
		{"ferror", "stdio.h"},
		{"fflush", "stdio.h"},
		{"fgetpos", "stdio.h"},
		{"fopen", "stdio.h"},
		{"fread", "stdio.h"},
		{"freopen", "stdio.h"},
		{"fseek", "stdio.h"},
		{"fsetpos", "stdio.h"},
		{"ftell", "stdio.h"},
		{"fwrite", "stdio.h"},
		{"remove", "stdio.h"},
		{"rename", "stdio.h"},
		{"rewind", "stdio.h"},
		{"setbuf", "stdio.h"},
		{"setvbuf", "stdio.h"},
		{"tmpfile", "stdio.h"},
		{"tmpnam", "stdio.h"},
		{"fprintf", "stdio.h"},
		{"printf", "stdio.h"},
		{"sprintf", "stdio.h"},
		{"vfprintf", "stdio.h"},
		{"vprintf", "stdio.h"},
		{"vsprintf", "stdio.h"},
		{"fscanf", "stdio.h"},
		{"scanf", "stdio.h"},
		{"sscanf", "stdio.h"},
		{"fgetc", "stdio.h"},
		{"fgets", "stdio.h"},
		{"fputc", "stdio.h"},
		{"fputs", "stdio.h"},
		{"getc", "stdio.h"},
		{"getchar", "stdio.h"},
		{"gets", "stdio.h"},
		{"putc", "stdio.h"},
		{"putchar", "stdio.h"},
		{"puts", "stdio.h"},
		{"ungetc", "stdio.h"},
		{"perror", "stdio.h"},

		{"atof", "stdlib.h"},
		{"atoi", "stdlib.h"},
		{"atol", "stdlib.h"},
		{"strtod", "stdlib.h"},
		{"strtol", "stdlib.h"},
		{"strtoul", "stdlib.h"},
		{"calloc", "stdlib.h"},
		{"free", "stdlib.h"},
		{"malloc", "stdlib.h"},
		{"realloc", "stdlib.h"},
		{"abort", "stdlib.h"},
		{"atexit", "stdlib.h"},
		{"exit", "stdlib.h"},
		{"getenv", "stdlib.h"},
		{"system", "stdlib.h"},
		{"bsearch", "stdlib.h"},
		{"qsort", "stdlib.h"},
		{"abs", "stdlib.h"},
		{"div", "stdlib.h"},
		{"labs", "stdlib.h"},
		{"ldiv", "stdlib.h"},
		{"rand", "stdlib.h"},
		{"srand", "stdlib.h"},
		{"mblen", "stdlib.h"},
		{"mbstowcs", "stdlib.h"},
		{"mbtowc", "stdlib.h"},
		{"wcstombs", "stdlib.h"},
		{"wctomb", "stdlib.h"},

		{"memchr", "string.h"},
		{"memcmp", "string.h"},
		{"memcpy", "string.h"},
		{"memmove", "string.h"},
		{"memset", "string.h"},
		{"strcat", "string.h"},
		{"strncat", "string.h"},
		{"strchr", "string.h"},
		{"strcmp", "string.h"},
		{"strncmp", "string.h"},
		{"strcoll", "string.h"},
		{"strcpy", "string.h"},
		{"strncpy", "string.h"},
		{"strcspn", "string.h"},
		{"strerror", "string.h"},
		{"strlen", "string.h"},
		{"strpbrk", "string.h"},
		{"strrchr", "string.h"},
		{"strspn", "string.h"},
		{"strstr", "string.h"},
		{"strtok", "string.h"},
		{"strxfrm", "string.h"},
	};

	auto iter = declarations.find(to_string(function));
	if (iter != declarations.end())
	{
		headers.emplace_back(to_wstring(iter->second));
	}
}
